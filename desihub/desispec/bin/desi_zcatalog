#!/usr/bin/env python

"""
Combine individual zbest files into a single zcatalog

NOTE: this could get factored out into script vs. algorithm vs. I/O, but
that would obfuscate the current short simplicity of this script.  Do that
refactor if we find that we have to generate zcatalog data outside of the
context of this script.

Stephen Bailey
Lawrence Berkeley National Lab
Fall 2015
"""

from __future__ import absolute_import, division, print_function

import sys, os
import numpy as np
from astropy.table import Table, vstack

from desispec import io

import optparse

parser = optparse.OptionParser(usage = "%prog [options]")
parser.add_option("-i", "--indir",   type=str,  help="input directory")
parser.add_option("-o", "--outfile", type=str,  help="output file")
parser.add_option("-v", "--verbose", action="store_true", help="some flag")
opts, args = parser.parse_args()

if opts.indir is None:
    print('ERROR: --input directory required')
    sys.exit(1)
    
if opts.outfile is None:
    opts.outfile = io.findfile('zcatalog')

import fitsio
zbestfiles = sorted(io.iterfiles(opts.indir, 'zbest'))
data = list()
for zbestfile in zbestfiles:
    zbest = fitsio.read(zbestfile, 'ZBEST')
    data.append(zbest)
    if opts.verbose:
        print(zbestfile, len(zbest))

zcat = np.hstack(data)
header = fitsio.read_header(zbestfiles[0], 0)

fitsio.write(opts.outfile, zcat, header=header, extname='ZCATALOG', clobber=True)





